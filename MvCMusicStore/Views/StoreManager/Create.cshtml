@model MvcMusicStore.Models.Album
@{
    ViewData["Title"] = "Create";
}
<h2>Create</h2>

@using (Html.BeginForm())
{
    // validation summary
    @Html.ValidationSummary(true)
    // A HTML fiedset that provides an edit form for an `Album` entity, ensuring that the Genre and Artist are rendered as a drop-down lists.
	<fieldset>
		<legend>Album</legend>
		<div class="editor-label">
			@Html.LabelFor(model => model.GenreId, "Genre")
		</div>
		<div class="editor-field">
			@Html.DropDownList("GenreId", String.Empty)
			@Html.ValidationMessageFor(model => model.GenreId)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.ArtistId, "Artist")
		</div>
		<div class="editor-field">
			@Html.DropDownList("ArtistId", String.Empty)
			@Html.ValidationMessageFor(model => model.ArtistId)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Title)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Title)
			@Html.ValidationMessageFor(model => model.Title)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.Price)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.Price)
			@Html.ValidationMessageFor(model => model.Price)
		</div>
		<div class="editor-label">
			@Html.LabelFor(model => model.AlbumArtUrl)
		</div>
		<div class="editor-field">
			@Html.EditorFor(model => model.AlbumArtUrl)
			@Html.ValidationMessageFor(model => model.AlbumArtUrl)
		</div>
		<p>
			<input type="submit" value="Create" />
		</p>
		</fieldset>
}
// add div with actionlink back to Index
<div>
	@Html.ActionLink("Back to List", "Index")
</div>